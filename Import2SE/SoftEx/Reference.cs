//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Import2SE.softexpert {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DocumentoBinding", Namespace="urn:document")]
    public partial class Documento : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback newCaptureInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAccessPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAccessPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback downloadEletronicFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback editDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKeyWordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKeyWordsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAccessPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback listPendencyDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback newAccessPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback newDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback newRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback releasePendencyDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchAccessAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAttributeValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadEletronicFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback viewDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback newDocumentContainerAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDocumentContainerAssociationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        //public Documento() {
        //    this.Url = global::Tecfy.OCR.Properties.Settings.Default.Tecfy.OCR_com_softexpert_tecfy_Documento;
        //    if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
        //        this.UseDefaultCredentials = true;
        //        this.useDefaultCredentialsSetExplicitly = false;
        //    }
        //    else {
        //        this.useDefaultCredentialsSetExplicitly = true;
        //    }
        //}
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event newCaptureInstanceCompletedEventHandler newCaptureInstanceCompleted;
        
        /// <remarks/>
        public event cancelDocumentCompletedEventHandler cancelDocumentCompleted;
        
        /// <remarks/>
        public event checkAccessPermissionCompletedEventHandler checkAccessPermissionCompleted;
        
        /// <remarks/>
        public event deleteAccessPermissionCompletedEventHandler deleteAccessPermissionCompleted;
        
        /// <remarks/>
        public event deleteDocumentCompletedEventHandler deleteDocumentCompleted;
        
        /// <remarks/>
        public event deleteRevisionCompletedEventHandler deleteRevisionCompleted;
        
        /// <remarks/>
        public event downloadEletronicFileCompletedEventHandler downloadEletronicFileCompleted;
        
        /// <remarks/>
        public event editDocumentCompletedEventHandler editDocumentCompleted;
        
        /// <remarks/>
        public event getKeyWordsCompletedEventHandler getKeyWordsCompleted;
        
        /// <remarks/>
        public event getKeyWordsDataCompletedEventHandler getKeyWordsDataCompleted;
        
        /// <remarks/>
        public event listAccessPermissionCompletedEventHandler listAccessPermissionCompleted;
        
        /// <remarks/>
        public event listPendencyDocumentCompletedEventHandler listPendencyDocumentCompleted;
        
        /// <remarks/>
        public event newAccessPermissionCompletedEventHandler newAccessPermissionCompleted;
        
        /// <remarks/>
        public event newDocumentCompletedEventHandler newDocumentCompleted;
        
        /// <remarks/>
        public event newRevisionCompletedEventHandler newRevisionCompleted;
        
        /// <remarks/>
        public event releasePendencyDocumentCompletedEventHandler releasePendencyDocumentCompleted;
        
        /// <remarks/>
        public event searchAccessAuditCompletedEventHandler searchAccessAuditCompleted;
        
        /// <remarks/>
        public event searchCategoryCompletedEventHandler searchCategoryCompleted;
        
        /// <remarks/>
        public event searchDocumentCompletedEventHandler searchDocumentCompleted;
        
        /// <remarks/>
        public event setAttributeValueCompletedEventHandler setAttributeValueCompleted;
        
        /// <remarks/>
        public event uploadEletronicFileCompletedEventHandler uploadEletronicFileCompleted;
        
        /// <remarks/>
        public event viewDocumentDataCompletedEventHandler viewDocumentDataCompleted;
        
        /// <remarks/>
        public event newDocumentContainerAssociationCompletedEventHandler newDocumentContainerAssociationCompleted;
        
        /// <remarks/>
        public event deleteDocumentContainerAssociationCompletedEventHandler deleteDocumentContainerAssociationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#newCaptureInstance", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public string newCaptureInstance(string processid, string workflowtitle, string documentbatchid, string userid, string captbatchid, out long Code, out string Detail, out string RecordKey, out string RecordID) {
            object[] results = this.Invoke("newCaptureInstance", new object[] {
                        processid,
                        workflowtitle,
                        documentbatchid,
                        userid,
                        captbatchid});
            Code = ((long)(results[1]));
            Detail = ((string)(results[2]));
            RecordKey = ((string)(results[3]));
            RecordID = ((string)(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newCaptureInstanceAsync(string processid, string workflowtitle, string documentbatchid, string userid, string captbatchid) {
            this.newCaptureInstanceAsync(processid, workflowtitle, documentbatchid, userid, captbatchid, null);
        }
        
        /// <remarks/>
        public void newCaptureInstanceAsync(string processid, string workflowtitle, string documentbatchid, string userid, string captbatchid, object userState) {
            if ((this.newCaptureInstanceOperationCompleted == null)) {
                this.newCaptureInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewCaptureInstanceOperationCompleted);
            }
            this.InvokeAsync("newCaptureInstance", new object[] {
                        processid,
                        workflowtitle,
                        documentbatchid,
                        userid,
                        captbatchid}, this.newCaptureInstanceOperationCompleted, userState);
        }
        
        private void OnnewCaptureInstanceOperationCompleted(object arg) {
            if ((this.newCaptureInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newCaptureInstanceCompleted(this, new newCaptureInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#cancelDocument", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string cancelDocument(string iddocument, string iduser, string dscancel, string idcategory) {
            object[] results = this.Invoke("cancelDocument", new object[] {
                        iddocument,
                        iduser,
                        dscancel,
                        idcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelDocumentAsync(string iddocument, string iduser, string dscancel, string idcategory) {
            this.cancelDocumentAsync(iddocument, iduser, dscancel, idcategory, null);
        }
        
        /// <remarks/>
        public void cancelDocumentAsync(string iddocument, string iduser, string dscancel, string idcategory, object userState) {
            if ((this.cancelDocumentOperationCompleted == null)) {
                this.cancelDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelDocumentOperationCompleted);
            }
            this.InvokeAsync("cancelDocument", new object[] {
                        iddocument,
                        iduser,
                        dscancel,
                        idcategory}, this.cancelDocumentOperationCompleted, userState);
        }
        
        private void OncancelDocumentOperationCompleted(object arg) {
            if ((this.cancelDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelDocumentCompleted(this, new cancelDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#checkAccessPermission", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string checkAccessPermission(string iddocument, string iduser, int permissiontype) {
            object[] results = this.Invoke("checkAccessPermission", new object[] {
                        iddocument,
                        iduser,
                        permissiontype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkAccessPermissionAsync(string iddocument, string iduser, int permissiontype) {
            this.checkAccessPermissionAsync(iddocument, iduser, permissiontype, null);
        }
        
        /// <remarks/>
        public void checkAccessPermissionAsync(string iddocument, string iduser, int permissiontype, object userState) {
            if ((this.checkAccessPermissionOperationCompleted == null)) {
                this.checkAccessPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAccessPermissionOperationCompleted);
            }
            this.InvokeAsync("checkAccessPermission", new object[] {
                        iddocument,
                        iduser,
                        permissiontype}, this.checkAccessPermissionOperationCompleted, userState);
        }
        
        private void OncheckAccessPermissionOperationCompleted(object arg) {
            if ((this.checkAccessPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAccessPermissionCompleted(this, new checkAccessPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#deleteAccessPermission", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string deleteAccessPermission(string iddocument, string iduser, int usertype) {
            object[] results = this.Invoke("deleteAccessPermission", new object[] {
                        iddocument,
                        iduser,
                        usertype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAccessPermissionAsync(string iddocument, string iduser, int usertype) {
            this.deleteAccessPermissionAsync(iddocument, iduser, usertype, null);
        }
        
        /// <remarks/>
        public void deleteAccessPermissionAsync(string iddocument, string iduser, int usertype, object userState) {
            if ((this.deleteAccessPermissionOperationCompleted == null)) {
                this.deleteAccessPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAccessPermissionOperationCompleted);
            }
            this.InvokeAsync("deleteAccessPermission", new object[] {
                        iddocument,
                        iduser,
                        usertype}, this.deleteAccessPermissionOperationCompleted, userState);
        }
        
        private void OndeleteAccessPermissionOperationCompleted(object arg) {
            if ((this.deleteAccessPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAccessPermissionCompleted(this, new deleteAccessPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#deleteDocument", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string deleteDocument(string idcategory, string iddocument, string iduser, string justify) {
            object[] results = this.Invoke("deleteDocument", new object[] {
                        idcategory,
                        iddocument,
                        iduser,
                        justify});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDocumentAsync(string idcategory, string iddocument, string iduser, string justify) {
            this.deleteDocumentAsync(idcategory, iddocument, iduser, justify, null);
        }
        
        /// <remarks/>
        public void deleteDocumentAsync(string idcategory, string iddocument, string iduser, string justify, object userState) {
            if ((this.deleteDocumentOperationCompleted == null)) {
                this.deleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("deleteDocument", new object[] {
                        idcategory,
                        iddocument,
                        iduser,
                        justify}, this.deleteDocumentOperationCompleted, userState);
        }
        
        private void OndeleteDocumentOperationCompleted(object arg) {
            if ((this.deleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDocumentCompleted(this, new deleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#deleteRevision", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string deleteRevision(string iddocument, string idrevision, string iduser, string justify) {
            object[] results = this.Invoke("deleteRevision", new object[] {
                        iddocument,
                        idrevision,
                        iduser,
                        justify});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRevisionAsync(string iddocument, string idrevision, string iduser, string justify) {
            this.deleteRevisionAsync(iddocument, idrevision, iduser, justify, null);
        }
        
        /// <remarks/>
        public void deleteRevisionAsync(string iddocument, string idrevision, string iduser, string justify, object userState) {
            if ((this.deleteRevisionOperationCompleted == null)) {
                this.deleteRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRevisionOperationCompleted);
            }
            this.InvokeAsync("deleteRevision", new object[] {
                        iddocument,
                        idrevision,
                        iduser,
                        justify}, this.deleteRevisionOperationCompleted, userState);
        }
        
        private void OndeleteRevisionOperationCompleted(object arg) {
            if ((this.deleteRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRevisionCompleted(this, new deleteRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#downloadEletronicFile", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public eletronicFile[] downloadEletronicFile(string iddocument, string idrevision, string iduser, string fgconverttopdf, string idcategory, string fgwatermark, string nmfile, string fgfilelink) {
            object[] results = this.Invoke("downloadEletronicFile", new object[] {
                        iddocument,
                        idrevision,
                        iduser,
                        fgconverttopdf,
                        idcategory,
                        fgwatermark,
                        nmfile,
                        fgfilelink});
            return ((eletronicFile[])(results[0]));
        }
        
        /// <remarks/>
        public void downloadEletronicFileAsync(string iddocument, string idrevision, string iduser, string fgconverttopdf, string idcategory, string fgwatermark, string nmfile, string fgfilelink) {
            this.downloadEletronicFileAsync(iddocument, idrevision, iduser, fgconverttopdf, idcategory, fgwatermark, nmfile, fgfilelink, null);
        }
        
        /// <remarks/>
        public void downloadEletronicFileAsync(string iddocument, string idrevision, string iduser, string fgconverttopdf, string idcategory, string fgwatermark, string nmfile, string fgfilelink, object userState) {
            if ((this.downloadEletronicFileOperationCompleted == null)) {
                this.downloadEletronicFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadEletronicFileOperationCompleted);
            }
            this.InvokeAsync("downloadEletronicFile", new object[] {
                        iddocument,
                        idrevision,
                        iduser,
                        fgconverttopdf,
                        idcategory,
                        fgwatermark,
                        nmfile,
                        fgfilelink}, this.downloadEletronicFileOperationCompleted, userState);
        }
        
        private void OndownloadEletronicFileOperationCompleted(object arg) {
            if ((this.downloadEletronicFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.downloadEletronicFileCompleted(this, new downloadEletronicFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#editDocument", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string editDocument(string idcategory, string iddocument, string iduser, string idrevision, string title, string summary) {
            object[] results = this.Invoke("editDocument", new object[] {
                        idcategory,
                        iddocument,
                        iduser,
                        idrevision,
                        title,
                        summary});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editDocumentAsync(string idcategory, string iddocument, string iduser, string idrevision, string title, string summary) {
            this.editDocumentAsync(idcategory, iddocument, iduser, idrevision, title, summary, null);
        }
        
        /// <remarks/>
        public void editDocumentAsync(string idcategory, string iddocument, string iduser, string idrevision, string title, string summary, object userState) {
            if ((this.editDocumentOperationCompleted == null)) {
                this.editDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditDocumentOperationCompleted);
            }
            this.InvokeAsync("editDocument", new object[] {
                        idcategory,
                        iddocument,
                        iduser,
                        idrevision,
                        title,
                        summary}, this.editDocumentOperationCompleted, userState);
        }
        
        private void OneditDocumentOperationCompleted(object arg) {
            if ((this.editDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editDocumentCompleted(this, new editDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#getKeyWords", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("document", IsNullable=false)]
        public string[] getKeyWords([System.Xml.Serialization.XmlArrayItemAttribute("document", IsNullable=false)] string[] letters) {
            object[] results = this.Invoke("getKeyWords", new object[] {
                        letters});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getKeyWordsAsync(string[] letters) {
            this.getKeyWordsAsync(letters, null);
        }
        
        /// <remarks/>
        public void getKeyWordsAsync(string[] letters, object userState) {
            if ((this.getKeyWordsOperationCompleted == null)) {
                this.getKeyWordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKeyWordsOperationCompleted);
            }
            this.InvokeAsync("getKeyWords", new object[] {
                        letters}, this.getKeyWordsOperationCompleted, userState);
        }
        
        private void OngetKeyWordsOperationCompleted(object arg) {
            if ((this.getKeyWordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKeyWordsCompleted(this, new getKeyWordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#getKeyWordsData", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public wordProperties[] getKeyWordsData([System.Xml.Serialization.XmlArrayItemAttribute("document", IsNullable=false)] string[] words) {
            object[] results = this.Invoke("getKeyWordsData", new object[] {
                        words});
            return ((wordProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getKeyWordsDataAsync(string[] words) {
            this.getKeyWordsDataAsync(words, null);
        }
        
        /// <remarks/>
        public void getKeyWordsDataAsync(string[] words, object userState) {
            if ((this.getKeyWordsDataOperationCompleted == null)) {
                this.getKeyWordsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKeyWordsDataOperationCompleted);
            }
            this.InvokeAsync("getKeyWordsData", new object[] {
                        words}, this.getKeyWordsDataOperationCompleted, userState);
        }
        
        private void OngetKeyWordsDataOperationCompleted(object arg) {
            if ((this.getKeyWordsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKeyWordsDataCompleted(this, new getKeyWordsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#listAccessPermission", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("document", IsNullable=false)]
        public string[] listAccessPermission(string iddocument, string iduser, string idcategory) {
            object[] results = this.Invoke("listAccessPermission", new object[] {
                        iddocument,
                        iduser,
                        idcategory});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listAccessPermissionAsync(string iddocument, string iduser, string idcategory) {
            this.listAccessPermissionAsync(iddocument, iduser, idcategory, null);
        }
        
        /// <remarks/>
        public void listAccessPermissionAsync(string iddocument, string iduser, string idcategory, object userState) {
            if ((this.listAccessPermissionOperationCompleted == null)) {
                this.listAccessPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAccessPermissionOperationCompleted);
            }
            this.InvokeAsync("listAccessPermission", new object[] {
                        iddocument,
                        iduser,
                        idcategory}, this.listAccessPermissionOperationCompleted, userState);
        }
        
        private void OnlistAccessPermissionOperationCompleted(object arg) {
            if ((this.listAccessPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAccessPermissionCompleted(this, new listAccessPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#listPendencyDocument", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public listPendencyDocumentReturn[] listPendencyDocument(string iduser) {
            object[] results = this.Invoke("listPendencyDocument", new object[] {
                        iduser});
            return ((listPendencyDocumentReturn[])(results[0]));
        }
        
        /// <remarks/>
        public void listPendencyDocumentAsync(string iduser) {
            this.listPendencyDocumentAsync(iduser, null);
        }
        
        /// <remarks/>
        public void listPendencyDocumentAsync(string iduser, object userState) {
            if ((this.listPendencyDocumentOperationCompleted == null)) {
                this.listPendencyDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistPendencyDocumentOperationCompleted);
            }
            this.InvokeAsync("listPendencyDocument", new object[] {
                        iduser}, this.listPendencyDocumentOperationCompleted, userState);
        }
        
        private void OnlistPendencyDocumentOperationCompleted(object arg) {
            if ((this.listPendencyDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listPendencyDocumentCompleted(this, new listPendencyDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#newAccessPermission", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string newAccessPermission(string iddocument, string iduser, int usertype, string permission, int permissionstype, string fgaddlowerlevel, string idcategory) {
            object[] results = this.Invoke("newAccessPermission", new object[] {
                        iddocument,
                        iduser,
                        usertype,
                        permission,
                        permissionstype,
                        fgaddlowerlevel,
                        idcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newAccessPermissionAsync(string iddocument, string iduser, int usertype, string permission, int permissionstype, string fgaddlowerlevel, string idcategory) {
            this.newAccessPermissionAsync(iddocument, iduser, usertype, permission, permissionstype, fgaddlowerlevel, idcategory, null);
        }
        
        /// <remarks/>
        public void newAccessPermissionAsync(string iddocument, string iduser, int usertype, string permission, int permissionstype, string fgaddlowerlevel, string idcategory, object userState) {
            if ((this.newAccessPermissionOperationCompleted == null)) {
                this.newAccessPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewAccessPermissionOperationCompleted);
            }
            this.InvokeAsync("newAccessPermission", new object[] {
                        iddocument,
                        iduser,
                        usertype,
                        permission,
                        permissionstype,
                        fgaddlowerlevel,
                        idcategory}, this.newAccessPermissionOperationCompleted, userState);
        }
        
        private void OnnewAccessPermissionOperationCompleted(object arg) {
            if ((this.newAccessPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newAccessPermissionCompleted(this, new newAccessPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#newDocument", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string newDocument(string idcategory, string iddocument, string title, string dsresume, string dtdocument, string attributes, string iduser, [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)] participantsData[] participants, int fgmodel, [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)] eletronicFile[] file) {
            object[] results = this.Invoke("newDocument", new object[] {
                        idcategory,
                        iddocument,
                        title,
                        dsresume,
                        dtdocument,
                        attributes,
                        iduser,
                        participants,
                        fgmodel,
                        file});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newDocumentAsync(string idcategory, string iddocument, string title, string dsresume, string dtdocument, string attributes, string iduser, participantsData[] participants, int fgmodel, eletronicFile[] file) {
            this.newDocumentAsync(idcategory, iddocument, title, dsresume, dtdocument, attributes, iduser, participants, fgmodel, file, null);
        }
        
        /// <remarks/>
        public void newDocumentAsync(string idcategory, string iddocument, string title, string dsresume, string dtdocument, string attributes, string iduser, participantsData[] participants, int fgmodel, eletronicFile[] file, object userState) {
            if ((this.newDocumentOperationCompleted == null)) {
                this.newDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewDocumentOperationCompleted);
            }
            this.InvokeAsync("newDocument", new object[] {
                        idcategory,
                        iddocument,
                        title,
                        dsresume,
                        dtdocument,
                        attributes,
                        iduser,
                        participants,
                        fgmodel,
                        file}, this.newDocumentOperationCompleted, userState);
        }
        
        private void OnnewDocumentOperationCompleted(object arg) {
            if ((this.newDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newDocumentCompleted(this, new newDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#newRevision", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string newRevision(string iddocument, string iduser, [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)] participantsData[] participants, documentData documentdata, [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)] eletronicFile[] file, int fgstatus, string dsjustify, string idcategory) {
            object[] results = this.Invoke("newRevision", new object[] {
                        iddocument,
                        iduser,
                        participants,
                        documentdata,
                        file,
                        fgstatus,
                        dsjustify,
                        idcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newRevisionAsync(string iddocument, string iduser, participantsData[] participants, documentData documentdata, eletronicFile[] file, int fgstatus, string dsjustify, string idcategory) {
            this.newRevisionAsync(iddocument, iduser, participants, documentdata, file, fgstatus, dsjustify, idcategory, null);
        }
        
        /// <remarks/>
        public void newRevisionAsync(string iddocument, string iduser, participantsData[] participants, documentData documentdata, eletronicFile[] file, int fgstatus, string dsjustify, string idcategory, object userState) {
            if ((this.newRevisionOperationCompleted == null)) {
                this.newRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewRevisionOperationCompleted);
            }
            this.InvokeAsync("newRevision", new object[] {
                        iddocument,
                        iduser,
                        participants,
                        documentdata,
                        file,
                        fgstatus,
                        dsjustify,
                        idcategory}, this.newRevisionOperationCompleted, userState);
        }
        
        private void OnnewRevisionOperationCompleted(object arg) {
            if ((this.newRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newRevisionCompleted(this, new newRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#releasePendencyDocument", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public releasePendencyDocumentReturn[] releasePendencyDocument(string iddocument, string iduser, int approv, string justify) {
            object[] results = this.Invoke("releasePendencyDocument", new object[] {
                        iddocument,
                        iduser,
                        approv,
                        justify});
            return ((releasePendencyDocumentReturn[])(results[0]));
        }
        
        /// <remarks/>
        public void releasePendencyDocumentAsync(string iddocument, string iduser, int approv, string justify) {
            this.releasePendencyDocumentAsync(iddocument, iduser, approv, justify, null);
        }
        
        /// <remarks/>
        public void releasePendencyDocumentAsync(string iddocument, string iduser, int approv, string justify, object userState) {
            if ((this.releasePendencyDocumentOperationCompleted == null)) {
                this.releasePendencyDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreleasePendencyDocumentOperationCompleted);
            }
            this.InvokeAsync("releasePendencyDocument", new object[] {
                        iddocument,
                        iduser,
                        approv,
                        justify}, this.releasePendencyDocumentOperationCompleted, userState);
        }
        
        private void OnreleasePendencyDocumentOperationCompleted(object arg) {
            if ((this.releasePendencyDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.releasePendencyDocumentCompleted(this, new releasePendencyDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#searchAccessAudit", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public listAuditSystem[] searchAccessAudit(string iddocument, string iduser, string periodbegin, string periodend) {
            object[] results = this.Invoke("searchAccessAudit", new object[] {
                        iddocument,
                        iduser,
                        periodbegin,
                        periodend});
            return ((listAuditSystem[])(results[0]));
        }
        
        /// <remarks/>
        public void searchAccessAuditAsync(string iddocument, string iduser, string periodbegin, string periodend) {
            this.searchAccessAuditAsync(iddocument, iduser, periodbegin, periodend, null);
        }
        
        /// <remarks/>
        public void searchAccessAuditAsync(string iddocument, string iduser, string periodbegin, string periodend, object userState) {
            if ((this.searchAccessAuditOperationCompleted == null)) {
                this.searchAccessAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchAccessAuditOperationCompleted);
            }
            this.InvokeAsync("searchAccessAudit", new object[] {
                        iddocument,
                        iduser,
                        periodbegin,
                        periodend}, this.searchAccessAuditOperationCompleted, userState);
        }
        
        private void OnsearchAccessAuditOperationCompleted(object arg) {
            if ((this.searchAccessAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchAccessAuditCompleted(this, new searchAccessAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#searchCategory", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public searchCategoryReturn searchCategory() {
            object[] results = this.Invoke("searchCategory", new object[0]);
            return ((searchCategoryReturn)(results[0]));
        }
        
        /// <remarks/>
        public void searchCategoryAsync() {
            this.searchCategoryAsync(null);
        }
        
        /// <remarks/>
        public void searchCategoryAsync(object userState) {
            if ((this.searchCategoryOperationCompleted == null)) {
                this.searchCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCategoryOperationCompleted);
            }
            this.InvokeAsync("searchCategory", new object[0], this.searchCategoryOperationCompleted, userState);
        }
        
        private void OnsearchCategoryOperationCompleted(object arg) {
            if ((this.searchCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCategoryCompleted(this, new searchCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#searchDocument", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public searchDocumentReturn searchDocument(searchDocumentFilter filters, string iduser, [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)] attributeData[] attributes) {
            object[] results = this.Invoke("searchDocument", new object[] {
                        filters,
                        iduser,
                        attributes});
            return ((searchDocumentReturn)(results[0]));
        }
        
        /// <remarks/>
        public void searchDocumentAsync(searchDocumentFilter filters, string iduser, attributeData[] attributes) {
            this.searchDocumentAsync(filters, iduser, attributes, null);
        }
        
        /// <remarks/>
        public void searchDocumentAsync(searchDocumentFilter filters, string iduser, attributeData[] attributes, object userState) {
            if ((this.searchDocumentOperationCompleted == null)) {
                this.searchDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchDocumentOperationCompleted);
            }
            this.InvokeAsync("searchDocument", new object[] {
                        filters,
                        iduser,
                        attributes}, this.searchDocumentOperationCompleted, userState);
        }
        
        private void OnsearchDocumentOperationCompleted(object arg) {
            if ((this.searchDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchDocumentCompleted(this, new searchDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#setAttributeValue", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string setAttributeValue(string iddocument, string idrevision, string idattribute, string vlattribute) {
            object[] results = this.Invoke("setAttributeValue", new object[] {
                        iddocument,
                        idrevision,
                        idattribute,
                        vlattribute});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setAttributeValueAsync(string iddocument, string idrevision, string idattribute, string vlattribute) {
            this.setAttributeValueAsync(iddocument, idrevision, idattribute, vlattribute, null);
        }
        
        /// <remarks/>
        public void setAttributeValueAsync(string iddocument, string idrevision, string idattribute, string vlattribute, object userState) {
            if ((this.setAttributeValueOperationCompleted == null)) {
                this.setAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAttributeValueOperationCompleted);
            }
            this.InvokeAsync("setAttributeValue", new object[] {
                        iddocument,
                        idrevision,
                        idattribute,
                        vlattribute}, this.setAttributeValueOperationCompleted, userState);
        }
        
        private void OnsetAttributeValueOperationCompleted(object arg) {
            if ((this.setAttributeValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAttributeValueCompleted(this, new setAttributeValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#uploadEletronicFile", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string uploadEletronicFile(string iddocument, string idrevision, string iduser, [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)] eletronicFile[] file) {
            object[] results = this.Invoke("uploadEletronicFile", new object[] {
                        iddocument,
                        idrevision,
                        iduser,
                        file});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadEletronicFileAsync(string iddocument, string idrevision, string iduser, eletronicFile[] file) {
            this.uploadEletronicFileAsync(iddocument, idrevision, iduser, file, null);
        }
        
        /// <remarks/>
        public void uploadEletronicFileAsync(string iddocument, string idrevision, string iduser, eletronicFile[] file, object userState) {
            if ((this.uploadEletronicFileOperationCompleted == null)) {
                this.uploadEletronicFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadEletronicFileOperationCompleted);
            }
            this.InvokeAsync("uploadEletronicFile", new object[] {
                        iddocument,
                        idrevision,
                        iduser,
                        file}, this.uploadEletronicFileOperationCompleted, userState);
        }
        
        private void OnuploadEletronicFileOperationCompleted(object arg) {
            if ((this.uploadEletronicFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadEletronicFileCompleted(this, new uploadEletronicFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#viewDocumentData", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public documentDataReturn viewDocumentData(string iddocument, string idrevision, string iduser, string idcategory) {
            object[] results = this.Invoke("viewDocumentData", new object[] {
                        iddocument,
                        idrevision,
                        iduser,
                        idcategory});
            return ((documentDataReturn)(results[0]));
        }
        
        /// <remarks/>
        public void viewDocumentDataAsync(string iddocument, string idrevision, string iduser, string idcategory) {
            this.viewDocumentDataAsync(iddocument, idrevision, iduser, idcategory, null);
        }
        
        /// <remarks/>
        public void viewDocumentDataAsync(string iddocument, string idrevision, string iduser, string idcategory, object userState) {
            if ((this.viewDocumentDataOperationCompleted == null)) {
                this.viewDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnviewDocumentDataOperationCompleted);
            }
            this.InvokeAsync("viewDocumentData", new object[] {
                        iddocument,
                        idrevision,
                        iduser,
                        idcategory}, this.viewDocumentDataOperationCompleted, userState);
        }
        
        private void OnviewDocumentDataOperationCompleted(object arg) {
            if ((this.viewDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.viewDocumentDataCompleted(this, new viewDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#newDocumentContainerAssociation", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public string newDocumentContainerAssociation(string UpperLevelCategoryID, string UpperLevelDocumentID, string RevisionID, string StructID, string LowerLevelCategoryID, string LowerLevelDocumentID, out long Code, out string Detail) {
            object[] results = this.Invoke("newDocumentContainerAssociation", new object[] {
                        UpperLevelCategoryID,
                        UpperLevelDocumentID,
                        RevisionID,
                        StructID,
                        LowerLevelCategoryID,
                        LowerLevelDocumentID});
            Code = ((long)(results[1]));
            Detail = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newDocumentContainerAssociationAsync(string UpperLevelCategoryID, string UpperLevelDocumentID, string RevisionID, string StructID, string LowerLevelCategoryID, string LowerLevelDocumentID) {
            this.newDocumentContainerAssociationAsync(UpperLevelCategoryID, UpperLevelDocumentID, RevisionID, StructID, LowerLevelCategoryID, LowerLevelDocumentID, null);
        }
        
        /// <remarks/>
        public void newDocumentContainerAssociationAsync(string UpperLevelCategoryID, string UpperLevelDocumentID, string RevisionID, string StructID, string LowerLevelCategoryID, string LowerLevelDocumentID, object userState) {
            if ((this.newDocumentContainerAssociationOperationCompleted == null)) {
                this.newDocumentContainerAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewDocumentContainerAssociationOperationCompleted);
            }
            this.InvokeAsync("newDocumentContainerAssociation", new object[] {
                        UpperLevelCategoryID,
                        UpperLevelDocumentID,
                        RevisionID,
                        StructID,
                        LowerLevelCategoryID,
                        LowerLevelDocumentID}, this.newDocumentContainerAssociationOperationCompleted, userState);
        }
        
        private void OnnewDocumentContainerAssociationOperationCompleted(object arg) {
            if ((this.newDocumentContainerAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newDocumentContainerAssociationCompleted(this, new newDocumentContainerAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:document#deleteDocumentContainerAssociation", RequestNamespace="urn:document", ResponseNamespace="urn:document", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public string deleteDocumentContainerAssociation(string UpperLevelCategoryID, string UpperLevelDocumentID, string RevisionID, string StructID, string LowerLevelCategoryID, string LowerLevelDocumentID, out long Code, out string Detail) {
            object[] results = this.Invoke("deleteDocumentContainerAssociation", new object[] {
                        UpperLevelCategoryID,
                        UpperLevelDocumentID,
                        RevisionID,
                        StructID,
                        LowerLevelCategoryID,
                        LowerLevelDocumentID});
            Code = ((long)(results[1]));
            Detail = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDocumentContainerAssociationAsync(string UpperLevelCategoryID, string UpperLevelDocumentID, string RevisionID, string StructID, string LowerLevelCategoryID, string LowerLevelDocumentID) {
            this.deleteDocumentContainerAssociationAsync(UpperLevelCategoryID, UpperLevelDocumentID, RevisionID, StructID, LowerLevelCategoryID, LowerLevelDocumentID, null);
        }
        
        /// <remarks/>
        public void deleteDocumentContainerAssociationAsync(string UpperLevelCategoryID, string UpperLevelDocumentID, string RevisionID, string StructID, string LowerLevelCategoryID, string LowerLevelDocumentID, object userState) {
            if ((this.deleteDocumentContainerAssociationOperationCompleted == null)) {
                this.deleteDocumentContainerAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocumentContainerAssociationOperationCompleted);
            }
            this.InvokeAsync("deleteDocumentContainerAssociation", new object[] {
                        UpperLevelCategoryID,
                        UpperLevelDocumentID,
                        RevisionID,
                        StructID,
                        LowerLevelCategoryID,
                        LowerLevelDocumentID}, this.deleteDocumentContainerAssociationOperationCompleted, userState);
        }
        
        private void OndeleteDocumentContainerAssociationOperationCompleted(object arg) {
            if ((this.deleteDocumentContainerAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDocumentContainerAssociationCompleted(this, new deleteDocumentContainerAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class eletronicFile {
        
        private string nMFILEField;
        
        private byte[] bINFILEField;
        
        private string cONTAINERField;
        
        private string eRRORField;
        //
        private string NMDirField;
        private string ContentTypeField;
        private byte[] PartField;
        private string TypeField;
        private string ContentIDField;
        private Boolean cachedField;
        private byte[] SizeField;
        //

        /// <remarks/>
        public string NMFILE {
            get {
                return this.nMFILEField;
            }
            set {
                this.nMFILEField = value;
            }
        }
        //
        public string NMDir
        {
            get
            {
                return this.NMDirField;
            }
            set
            {
                this.NMDirField = value;
            }
        }
        public string ContentType
        {
            get
            {
                return this.ContentTypeField;
            }
            set
            {
                this.ContentTypeField = value;
            }
        }
        public byte[] Part
        {
            get
            {
                return this.PartField;
            }
            set
            {
                this.PartField = value;
            }
        }
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        public string ContentID
        {
            get
            {
                return this.ContentIDField;
            }
            set
            {
                this.ContentIDField = value;
            }
        }

        public Boolean cached
        {
            get
            {
                return this.cachedField;
            }
            set
            {
                this.cachedField = value;
            }
        }

        public byte[] Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }

        //

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BINFILE {
            get {
                return this.bINFILEField;
            }
            set {
                this.bINFILEField = value;
            }
        }
        
        /// <remarks/>
        public string CONTAINER {
            get {
                return this.cONTAINERField;
            }
            set {
                this.cONTAINERField = value;
            }
        }
        
        /// <remarks/>
        public string ERROR {
            get {
                return this.eRRORField;
            }
            set {
                this.eRRORField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class electronicFile {
        
        private string fILENAMEField;
        
        /// <remarks/>
        public string FILENAME {
            get {
                return this.fILENAMEField;
            }
            set {
                this.fILENAMEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class attributtes {
        
        private string aTTRIBUTTENAMEField;
        
        private string[] aTTRIBUTTEVALUEField;
        
        /// <remarks/>
        public string ATTRIBUTTENAME {
            get {
                return this.aTTRIBUTTENAMEField;
            }
            set {
                this.aTTRIBUTTENAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("document", IsNullable=false)]
        public string[] ATTRIBUTTEVALUE {
            get {
                return this.aTTRIBUTTEVALUEField;
            }
            set {
                this.aTTRIBUTTEVALUEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class documentDataReturn {
        
        private string iDDOCUMENTField;
        
        private string nMTITLEField;
        
        private string iDCATEGORYField;
        
        private string nMCATEGORYField;
        
        private string sTATUSField;
        
        private int nRHITSField;
        
        private string nMAUTHORField;
        
        private string iDREVISIONField;
        
        private string dTDOCUMENTField;
        
        private int qTVALIDITYField;
        
        private string fGMEASVALIDField;
        
        private string rEVALIDATIONField;
        
        private string dTVALIDITYField;
        
        private string rESUMEField;
        
        private string cANCELREASONField;
        
        private string uRLField;
        
        private attributtes[] aTTRIBUTTESField;
        
        private electronicFile[] eLECTRONICFILEField;
        
        private string eRRORField;
        
        /// <remarks/>
        public string IDDOCUMENT {
            get {
                return this.iDDOCUMENTField;
            }
            set {
                this.iDDOCUMENTField = value;
            }
        }
        
        /// <remarks/>
        public string NMTITLE {
            get {
                return this.nMTITLEField;
            }
            set {
                this.nMTITLEField = value;
            }
        }
        
        /// <remarks/>
        public string IDCATEGORY {
            get {
                return this.iDCATEGORYField;
            }
            set {
                this.iDCATEGORYField = value;
            }
        }
        
        /// <remarks/>
        public string NMCATEGORY {
            get {
                return this.nMCATEGORYField;
            }
            set {
                this.nMCATEGORYField = value;
            }
        }
        
        /// <remarks/>
        public string STATUS {
            get {
                return this.sTATUSField;
            }
            set {
                this.sTATUSField = value;
            }
        }
        
        /// <remarks/>
        public int NRHITS {
            get {
                return this.nRHITSField;
            }
            set {
                this.nRHITSField = value;
            }
        }
        
        /// <remarks/>
        public string NMAUTHOR {
            get {
                return this.nMAUTHORField;
            }
            set {
                this.nMAUTHORField = value;
            }
        }
        
        /// <remarks/>
        public string IDREVISION {
            get {
                return this.iDREVISIONField;
            }
            set {
                this.iDREVISIONField = value;
            }
        }
        
        /// <remarks/>
        public string DTDOCUMENT {
            get {
                return this.dTDOCUMENTField;
            }
            set {
                this.dTDOCUMENTField = value;
            }
        }
        
        /// <remarks/>
        public int QTVALIDITY {
            get {
                return this.qTVALIDITYField;
            }
            set {
                this.qTVALIDITYField = value;
            }
        }
        
        /// <remarks/>
        public string FGMEASVALID {
            get {
                return this.fGMEASVALIDField;
            }
            set {
                this.fGMEASVALIDField = value;
            }
        }
        
        /// <remarks/>
        public string REVALIDATION {
            get {
                return this.rEVALIDATIONField;
            }
            set {
                this.rEVALIDATIONField = value;
            }
        }
        
        /// <remarks/>
        public string DTVALIDITY {
            get {
                return this.dTVALIDITYField;
            }
            set {
                this.dTVALIDITYField = value;
            }
        }
        
        /// <remarks/>
        public string RESUME {
            get {
                return this.rESUMEField;
            }
            set {
                this.rESUMEField = value;
            }
        }
        
        /// <remarks/>
        public string CANCELREASON {
            get {
                return this.cANCELREASONField;
            }
            set {
                this.cANCELREASONField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public attributtes[] ATTRIBUTTES {
            get {
                return this.aTTRIBUTTESField;
            }
            set {
                this.aTTRIBUTTESField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public electronicFile[] ELECTRONICFILE {
            get {
                return this.eLECTRONICFILEField;
            }
            set {
                this.eLECTRONICFILEField = value;
            }
        }
        
        /// <remarks/>
        public string ERROR {
            get {
                return this.eRRORField;
            }
            set {
                this.eRRORField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class documentReturn {
        
        private string iDDOCUMENTField;
        
        private string nMTITLEField;
        
        private string iDREVISIONField;
        
        private string dTDOCUMENTField;
        
        /// <remarks/>
        public string IDDOCUMENT {
            get {
                return this.iDDOCUMENTField;
            }
            set {
                this.iDDOCUMENTField = value;
            }
        }
        
        /// <remarks/>
        public string NMTITLE {
            get {
                return this.nMTITLEField;
            }
            set {
                this.nMTITLEField = value;
            }
        }
        
        /// <remarks/>
        public string IDREVISION {
            get {
                return this.iDREVISIONField;
            }
            set {
                this.iDREVISIONField = value;
            }
        }
        
        /// <remarks/>
        public string DTDOCUMENT {
            get {
                return this.dTDOCUMENTField;
            }
            set {
                this.dTDOCUMENTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class searchDocumentReturn {
        
        private documentReturn[] rESULTSField;
        
        private int aDHESIONField;
        
        private string eRRORField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public documentReturn[] RESULTS {
            get {
                return this.rESULTSField;
            }
            set {
                this.rESULTSField = value;
            }
        }
        
        /// <remarks/>
        public int ADHESION {
            get {
                return this.aDHESIONField;
            }
            set {
                this.aDHESIONField = value;
            }
        }
        
        /// <remarks/>
        public string ERROR {
            get {
                return this.eRRORField;
            }
            set {
                this.eRRORField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class attributeData {
        
        private string iDATTRIBUTEField;
        
        private string vLATTRIBUTEField;
        
        /// <remarks/>
        public string IDATTRIBUTE {
            get {
                return this.iDATTRIBUTEField;
            }
            set {
                this.iDATTRIBUTEField = value;
            }
        }
        
        /// <remarks/>
        public string VLATTRIBUTE {
            get {
                return this.vLATTRIBUTEField;
            }
            set {
                this.vLATTRIBUTEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class searchDocumentFilter {
        
        private string iDCATEGORYField;
        
        private string iDDOCUMENTField;
        
        private string nMTITLEField;
        
        private string nMAUTHORField;
        
        private string cONTENTField;
        
        private string sYNONYMField;
        
        private string sTATUSField;
        
        private string pERMISSIONField;
        
        private string iDUSERPERMField;
        
        private string dEPARTMENTPERMField;
        
        private string iDUSERREGISTERField;
        
        private string fUNCTIONPERMField;
        
        private string kEYWORDField;
        
        private int oPKEYWORDField;
        
        private string dTDOCLASTDAYField;
        
        private string dTDOCBEGINField;
        
        private string dTDOCENDField;
        
        private string dTREGLASTDAYField;
        
        private string dTREGBEGINField;
        
        private string dTREGENDField;
        
        private string dTVALIDBEGINField;
        
        private string dTVALIDENDField;
        
        private string dTREVLASTDAYField;
        
        private string dTREVBEGINField;
        
        private string dTREVENDField;
        
        private string iDPROJECTField;
        
        private string nMPROJECTField;
        
        /// <remarks/>
        public string IDCATEGORY {
            get {
                return this.iDCATEGORYField;
            }
            set {
                this.iDCATEGORYField = value;
            }
        }
        
        /// <remarks/>
        public string IDDOCUMENT {
            get {
                return this.iDDOCUMENTField;
            }
            set {
                this.iDDOCUMENTField = value;
            }
        }
        
        /// <remarks/>
        public string NMTITLE {
            get {
                return this.nMTITLEField;
            }
            set {
                this.nMTITLEField = value;
            }
        }
        
        /// <remarks/>
        public string NMAUTHOR {
            get {
                return this.nMAUTHORField;
            }
            set {
                this.nMAUTHORField = value;
            }
        }
        
        /// <remarks/>
        public string CONTENT {
            get {
                return this.cONTENTField;
            }
            set {
                this.cONTENTField = value;
            }
        }
        
        /// <remarks/>
        public string SYNONYM {
            get {
                return this.sYNONYMField;
            }
            set {
                this.sYNONYMField = value;
            }
        }
        
        /// <remarks/>
        public string STATUS {
            get {
                return this.sTATUSField;
            }
            set {
                this.sTATUSField = value;
            }
        }
        
        /// <remarks/>
        public string PERMISSION {
            get {
                return this.pERMISSIONField;
            }
            set {
                this.pERMISSIONField = value;
            }
        }
        
        /// <remarks/>
        public string IDUSERPERM {
            get {
                return this.iDUSERPERMField;
            }
            set {
                this.iDUSERPERMField = value;
            }
        }
        
        /// <remarks/>
        public string DEPARTMENTPERM {
            get {
                return this.dEPARTMENTPERMField;
            }
            set {
                this.dEPARTMENTPERMField = value;
            }
        }
        
        /// <remarks/>
        public string IDUSERREGISTER {
            get {
                return this.iDUSERREGISTERField;
            }
            set {
                this.iDUSERREGISTERField = value;
            }
        }
        
        /// <remarks/>
        public string FUNCTIONPERM {
            get {
                return this.fUNCTIONPERMField;
            }
            set {
                this.fUNCTIONPERMField = value;
            }
        }
        
        /// <remarks/>
        public string KEYWORD {
            get {
                return this.kEYWORDField;
            }
            set {
                this.kEYWORDField = value;
            }
        }
        
        /// <remarks/>
        public int OPKEYWORD {
            get {
                return this.oPKEYWORDField;
            }
            set {
                this.oPKEYWORDField = value;
            }
        }
        
        /// <remarks/>
        public string DTDOCLASTDAY {
            get {
                return this.dTDOCLASTDAYField;
            }
            set {
                this.dTDOCLASTDAYField = value;
            }
        }
        
        /// <remarks/>
        public string DTDOCBEGIN {
            get {
                return this.dTDOCBEGINField;
            }
            set {
                this.dTDOCBEGINField = value;
            }
        }
        
        /// <remarks/>
        public string DTDOCEND {
            get {
                return this.dTDOCENDField;
            }
            set {
                this.dTDOCENDField = value;
            }
        }
        
        /// <remarks/>
        public string DTREGLASTDAY {
            get {
                return this.dTREGLASTDAYField;
            }
            set {
                this.dTREGLASTDAYField = value;
            }
        }
        
        /// <remarks/>
        public string DTREGBEGIN {
            get {
                return this.dTREGBEGINField;
            }
            set {
                this.dTREGBEGINField = value;
            }
        }
        
        /// <remarks/>
        public string DTREGEND {
            get {
                return this.dTREGENDField;
            }
            set {
                this.dTREGENDField = value;
            }
        }
        
        /// <remarks/>
        public string DTVALIDBEGIN {
            get {
                return this.dTVALIDBEGINField;
            }
            set {
                this.dTVALIDBEGINField = value;
            }
        }
        
        /// <remarks/>
        public string DTVALIDEND {
            get {
                return this.dTVALIDENDField;
            }
            set {
                this.dTVALIDENDField = value;
            }
        }
        
        /// <remarks/>
        public string DTREVLASTDAY {
            get {
                return this.dTREVLASTDAYField;
            }
            set {
                this.dTREVLASTDAYField = value;
            }
        }
        
        /// <remarks/>
        public string DTREVBEGIN {
            get {
                return this.dTREVBEGINField;
            }
            set {
                this.dTREVBEGINField = value;
            }
        }
        
        /// <remarks/>
        public string DTREVEND {
            get {
                return this.dTREVENDField;
            }
            set {
                this.dTREVENDField = value;
            }
        }
        
        /// <remarks/>
        public string IDPROJECT {
            get {
                return this.iDPROJECTField;
            }
            set {
                this.iDPROJECTField = value;
            }
        }
        
        /// <remarks/>
        public string NMPROJECT {
            get {
                return this.nMPROJECTField;
            }
            set {
                this.nMPROJECTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class categoryReturn {
        
        private int cDCATEGORYField;
        
        private int cDCATEGORYOWNERField;
        
        private string iDCATEGORYField;
        
        private string nMCATEGORYField;
        
        /// <remarks/>
        public int CDCATEGORY {
            get {
                return this.cDCATEGORYField;
            }
            set {
                this.cDCATEGORYField = value;
            }
        }
        
        /// <remarks/>
        public int CDCATEGORYOWNER {
            get {
                return this.cDCATEGORYOWNERField;
            }
            set {
                this.cDCATEGORYOWNERField = value;
            }
        }
        
        /// <remarks/>
        public string IDCATEGORY {
            get {
                return this.iDCATEGORYField;
            }
            set {
                this.iDCATEGORYField = value;
            }
        }
        
        /// <remarks/>
        public string NMCATEGORY {
            get {
                return this.nMCATEGORYField;
            }
            set {
                this.nMCATEGORYField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class searchCategoryReturn {
        
        private categoryReturn[] rESULTARRAYField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public categoryReturn[] RESULTARRAY {
            get {
                return this.rESULTARRAYField;
            }
            set {
                this.rESULTARRAYField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class listAuditSystem {
        
        private string tYPEAUDITField;
        
        private string dTACCESSField;
        
        private string tMACCESSField;
        
        private string iDCATEGORYField;
        
        private string iDDOCUMENTField;
        
        private string iDREVISIONField;
        
        private string iDUSERField;
        
        private string nMHOSTField;
        
        private string iPADDRESSField;
        
        private string nMTITLEField;
        
        private string nMDEPARTAMENTField;
        
        private string eRRORField;
        
        /// <remarks/>
        public string TYPEAUDIT {
            get {
                return this.tYPEAUDITField;
            }
            set {
                this.tYPEAUDITField = value;
            }
        }
        
        /// <remarks/>
        public string DTACCESS {
            get {
                return this.dTACCESSField;
            }
            set {
                this.dTACCESSField = value;
            }
        }
        
        /// <remarks/>
        public string TMACCESS {
            get {
                return this.tMACCESSField;
            }
            set {
                this.tMACCESSField = value;
            }
        }
        
        /// <remarks/>
        public string IDCATEGORY {
            get {
                return this.iDCATEGORYField;
            }
            set {
                this.iDCATEGORYField = value;
            }
        }
        
        /// <remarks/>
        public string IDDOCUMENT {
            get {
                return this.iDDOCUMENTField;
            }
            set {
                this.iDDOCUMENTField = value;
            }
        }
        
        /// <remarks/>
        public string IDREVISION {
            get {
                return this.iDREVISIONField;
            }
            set {
                this.iDREVISIONField = value;
            }
        }
        
        /// <remarks/>
        public string IDUSER {
            get {
                return this.iDUSERField;
            }
            set {
                this.iDUSERField = value;
            }
        }
        
        /// <remarks/>
        public string NMHOST {
            get {
                return this.nMHOSTField;
            }
            set {
                this.nMHOSTField = value;
            }
        }
        
        /// <remarks/>
        public string IPADDRESS {
            get {
                return this.iPADDRESSField;
            }
            set {
                this.iPADDRESSField = value;
            }
        }
        
        /// <remarks/>
        public string NMTITLE {
            get {
                return this.nMTITLEField;
            }
            set {
                this.nMTITLEField = value;
            }
        }
        
        /// <remarks/>
        public string NMDEPARTAMENT {
            get {
                return this.nMDEPARTAMENTField;
            }
            set {
                this.nMDEPARTAMENTField = value;
            }
        }
        
        /// <remarks/>
        public string ERROR {
            get {
                return this.eRRORField;
            }
            set {
                this.eRRORField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class releasePendencyDocumentReturn {
        
        private string iDUSERField;
        
        private int uSERTYPEField;
        
        /// <remarks/>
        public string IDUSER {
            get {
                return this.iDUSERField;
            }
            set {
                this.iDUSERField = value;
            }
        }
        
        /// <remarks/>
        public int USERTYPE {
            get {
                return this.uSERTYPEField;
            }
            set {
                this.uSERTYPEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class documentData {
        
        private string nMTITLEField;
        
        private string aTTRIBUTTESField;
        
        /// <remarks/>
        public string NMTITLE {
            get {
                return this.nMTITLEField;
            }
            set {
                this.nMTITLEField = value;
            }
        }
        
        /// <remarks/>
        public string ATTRIBUTTES {
            get {
                return this.aTTRIBUTTESField;
            }
            set {
                this.aTTRIBUTTESField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class participantsData {
        
        private int cONTROLField;
        
        private string eNTCONTROLField;
        
        private string sTEPField;
        
        private int sEQUENCEField;
        
        private int qTDEADLINEField;
        
        /// <remarks/>
        public int CONTROL {
            get {
                return this.cONTROLField;
            }
            set {
                this.cONTROLField = value;
            }
        }
        
        /// <remarks/>
        public string ENTCONTROL {
            get {
                return this.eNTCONTROLField;
            }
            set {
                this.eNTCONTROLField = value;
            }
        }
        
        /// <remarks/>
        public string STEP {
            get {
                return this.sTEPField;
            }
            set {
                this.sTEPField = value;
            }
        }
        
        /// <remarks/>
        public int SEQUENCE {
            get {
                return this.sEQUENCEField;
            }
            set {
                this.sEQUENCEField = value;
            }
        }
        
        /// <remarks/>
        public int QTDEADLINE {
            get {
                return this.qTDEADLINEField;
            }
            set {
                this.qTDEADLINEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class listPendencyDocumentReturn {
        
        private string iDDOCUMENTField;
        
        private string iDREVISIONField;
        
        private int pENDENCYTYPEField;
        
        private string eRRORField;
        
        /// <remarks/>
        public string IDDOCUMENT {
            get {
                return this.iDDOCUMENTField;
            }
            set {
                this.iDDOCUMENTField = value;
            }
        }
        
        /// <remarks/>
        public string IDREVISION {
            get {
                return this.iDREVISIONField;
            }
            set {
                this.iDREVISIONField = value;
            }
        }
        
        /// <remarks/>
        public int PENDENCYTYPE {
            get {
                return this.pENDENCYTYPEField;
            }
            set {
                this.pENDENCYTYPEField = value;
            }
        }
        
        /// <remarks/>
        public string ERROR {
            get {
                return this.eRRORField;
            }
            set {
                this.eRRORField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:document")]
    public partial class wordProperties {
        
        private string iDKEYWORDField;
        
        private string nMKEYWORDField;
        
        private string[] sYNONYMSField;
        
        /// <remarks/>
        public string IDKEYWORD {
            get {
                return this.iDKEYWORDField;
            }
            set {
                this.iDKEYWORDField = value;
            }
        }
        
        /// <remarks/>
        public string NMKEYWORD {
            get {
                return this.nMKEYWORDField;
            }
            set {
                this.nMKEYWORDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("document", IsNullable=false)]
        public string[] SYNONYMS {
            get {
                return this.sYNONYMSField;
            }
            set {
                this.sYNONYMSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void newCaptureInstanceCompletedEventHandler(object sender, newCaptureInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newCaptureInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newCaptureInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string RecordKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string RecordID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void cancelDocumentCompletedEventHandler(object sender, cancelDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void checkAccessPermissionCompletedEventHandler(object sender, checkAccessPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAccessPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAccessPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void deleteAccessPermissionCompletedEventHandler(object sender, deleteAccessPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAccessPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAccessPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void deleteDocumentCompletedEventHandler(object sender, deleteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void deleteRevisionCompletedEventHandler(object sender, deleteRevisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void downloadEletronicFileCompletedEventHandler(object sender, downloadEletronicFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class downloadEletronicFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal downloadEletronicFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public eletronicFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((eletronicFile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void editDocumentCompletedEventHandler(object sender, editDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getKeyWordsCompletedEventHandler(object sender, getKeyWordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKeyWordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKeyWordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getKeyWordsDataCompletedEventHandler(object sender, getKeyWordsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKeyWordsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKeyWordsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public wordProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((wordProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void listAccessPermissionCompletedEventHandler(object sender, listAccessPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAccessPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAccessPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void listPendencyDocumentCompletedEventHandler(object sender, listPendencyDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listPendencyDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listPendencyDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public listPendencyDocumentReturn[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((listPendencyDocumentReturn[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void newAccessPermissionCompletedEventHandler(object sender, newAccessPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newAccessPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newAccessPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void newDocumentCompletedEventHandler(object sender, newDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void newRevisionCompletedEventHandler(object sender, newRevisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void releasePendencyDocumentCompletedEventHandler(object sender, releasePendencyDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class releasePendencyDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal releasePendencyDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public releasePendencyDocumentReturn[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((releasePendencyDocumentReturn[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void searchAccessAuditCompletedEventHandler(object sender, searchAccessAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchAccessAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchAccessAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public listAuditSystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((listAuditSystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void searchCategoryCompletedEventHandler(object sender, searchCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public searchCategoryReturn Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((searchCategoryReturn)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void searchDocumentCompletedEventHandler(object sender, searchDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public searchDocumentReturn Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((searchDocumentReturn)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void setAttributeValueCompletedEventHandler(object sender, setAttributeValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAttributeValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAttributeValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void uploadEletronicFileCompletedEventHandler(object sender, uploadEletronicFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadEletronicFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadEletronicFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void viewDocumentDataCompletedEventHandler(object sender, viewDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class viewDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal viewDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDataReturn Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDataReturn)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void newDocumentContainerAssociationCompletedEventHandler(object sender, newDocumentContainerAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newDocumentContainerAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newDocumentContainerAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void deleteDocumentContainerAssociationCompletedEventHandler(object sender, deleteDocumentContainerAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDocumentContainerAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDocumentContainerAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591